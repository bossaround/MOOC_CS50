labels = labs) +
scale_color_manual(name = "Model Fitted",labels = labs_legend, values = color_legend) +
scale_fill_manual(name = "Model Fitted",labels = labs_legend, values = color_legend) +
scale_shape_discrete(name="Mean Value of Observed",labels = c("US","Foreign"))+
xlab("Milestone") + ylab("Log Hazard of Dropout")
ggsave("foreign_combined_global_regional_dot_logit.png",device = 'png',width=8,height=5)
xafit1<-glm(drop~foreign, family="binomial", data=dat7)
summary(xafit1)
t<-data.frame(xafit1$coefficients)
p0<-t[1,1]
p1<-p0+t[2,1]
ts0 <- survfit( Surv(ms, event)~ 1, conf.type="log", subset=(foreign==0), data=dat7)
ts0
ts1 <- survfit( Surv(ms, event)~ 1, conf.type="log", subset=(foreign==1), data=dat7)
ts1
h0<-ts0$n.event/ts0$n.risk
h1<-ts1$n.event/ts1$n.risk
odds0<-h0/(1-h0)
odds1<-h1/(1-h1)
logith0<-log(odds0)
logith1<-log(odds1)
pointestf0 <- data.frame(ts1$time[1:9]+1, logith0[1:9])
pointestf1 <- data.frame(ts1$time[1:9]+1, logith1[1:9])
colnames(pointestf0) <- c("time","logith")
colnames(pointestf1) <- c("time","logith")
pointestf <- rbind(pointestf0, pointestf1)
pointestf$foreign <- c(rep(0,9),rep(1,9))
ts0f <- survfit( Surv(ms, event)~ 1, conf.type="log", subset=(foreign==0), data=datK)
ts0f
ts1f <- survfit( Surv(ms, event)~ 1, conf.type="log", subset=(foreign==1), data=datK)
ts1f
h0f<-ts0f$n.event/ts0f$n.risk
h1f<-ts1f$n.event/ts1f$n.risk
odds0f<-h0f/(1-h0f)
odds1f<-h1f/(1-h1f)
logith0f<-log(odds0f)
logith1f<-log(odds1f)
pointestf0f <- data.frame(ts1f$time[1:9]+1, logith0f[1:9])
pointestf1f <- data.frame(ts1f$time[1:9]+1, logith1f[1:9])
colnames(pointestf0f) <- c("time","logith")
colnames(pointestf1f) <- c("time","logith")
pointestff <- rbind(pointestf0f, pointestf1f)
pointestff$foreign <- c(rep(0,9),rep(1,9))
#logith0<-odds0
#logith1<-odds1
dat7$ms2 <- dat7$ms^2
xafit8<-glm(event~foreign + ms +ms2, family="binomial", data=dat7)
summary(xafit8)
t<-data.frame(xafit8$coefficients)
y0<-t[1,1] + t[3,1]*ts0$time[1:8] + t[4,1]*ts0$time[1:8]^2
y1<-t[1,1] + t[2,1] + t[3,1]*ts0$time[1:8] + t[4,1]*ts0$time[1:8]^2
plot(ts0$time[1:8], logith0[1:8], type="p", ylab="Estimated Logit Hazard", xlab="milestone",
ylim=c(-2, 1), xlim=c(1, 9), col="blue")
par(new=T)
plot(ts1$time[1:8], logith1[1:8], type="p", ylab=" ", ylim=c(-2, 1), xlim=c(1, 9), xlab="", col="red")
par(new=T)
plot(ts1$time[1:8], y0, type="l", ylab=" ", ylim=c(-2, 1), xlim=c(1, 9), xlab="", col="blue")
par(new=T)
plot(ts1$time[1:8], y1, type="l", ylab=" ", ylim=c(-2, 1), xlim=c(1, 9), xlab="", col="red")
legend(6,1, # places a legend at the appropriate place
c('Location=US','Location=Foreign'), # puts text in the legend
lty=c(1,1), # gives the legend appropriate symbols (lines)
lwd=c(2.5,2.5),col=c('blue','red')) # gives the legend lines the correct color and width
labs <- c("p1", "p2", "p3", "p4","p5","p6","p7","p8 (optional)","Final")
labs_legend = c("Global - US", "Global - Foreign", "Regional - US", "Regional - Foreign")
color_legend = c("coral","hotpink2","steelblue1","slateblue3")
ggplot()+
geom_smooth (data= datL, method="glm", formula = y~x ,  alpha=0.55, size = 1,level=0.88, aes(milestone, predict_value, color=interaction(model,foreign), fill=interaction(model,foreign))) +
geom_smooth (data=datK, method="glm", formula = y~x+I(x^2) + I(x^3),  alpha=0.55, size = 1,level=0.95, aes(milestone, predict_value, color=interaction(model,foreign), fill=interaction(model,foreign))) +
geom_point(data=pointestff,  aes(time, logith+0.5,shape=as.factor(foreign)))+
scale_x_continuous(breaks = seq(2,10,by=1),
labels = labs) +
scale_color_manual(name = "Model Fitted",labels = labs_legend, values = color_legend) +
scale_fill_manual(name = "Model Fitted",labels = labs_legend, values = color_legend) +
scale_shape_discrete(name="Mean Value of Observed",labels = c("US","Foreign"))+
xlab("Milestone") + ylab("Log Hazard of Dropout")
ggsave("foreign_combined_global_regional_dot_logit.png",device = 'png',width=8,height=5)
labs <- c("p1", "p2", "p3", "p4","p5","p6","p7","p8 (optional)","Final")
labs_legend = c("Global - US", "Global - Foreign", "Regional - US", "Regional - Foreign")
color_legend = c("coral","hotpink2","steelblue1","slateblue3")
ggplot()+
geom_smooth (data= datL, method="glm", formula = y~x,  alpha=0.55, size = 1,level=0.88, aes(milestone, predict_probability, color=interaction(model,foreign), fill=interaction(model,foreign))) +
geom_smooth (data=datK, method="glm", formula = y~x+I(x^2) + I(x^3),  alpha=0.55, size = 1,level=0.95, aes(milestone, predict_probability, color=interaction(model,foreign), fill=interaction(model,foreign))) +
geom_point(data=pointestff,  aes(time, exp(logith+0.54)/(1+exp(logith+0.54)),shape=as.factor(foreign)))+
scale_x_continuous(breaks = seq(2,10,by=1),
labels = labs) +
scale_color_manual(name = "Model Fitted",labels = labs_legend, values = color_legend) +
scale_fill_manual(name = "Model Fitted",labels = labs_legend, values = color_legend) +
scale_shape_discrete(name="Mean Value of Observed",labels = c("US","Foreign"))+
xlab("Milestone") + ylab("Log Hazard of Dropout")
ggsave("foreign_combined_global_regional_dot_probability.png",device = 'png',width=8,height=5)
labs <- c("p1", "p2", "p3", "p4","p5","p6","p7","p8 (optional)","Final")
labs_legend = c("Global - US", "Global - Foreign", "Regional - US", "Regional - Foreign")
color_legend = c("coral","hotpink2","steelblue1","slateblue3")
ggplot()+
geom_smooth (data= datL, method="glm", formula = y~x ,  alpha=0.55, size = 1,level=0.88, aes(milestone, predict_value, color=interaction(model,foreign), fill=interaction(model,foreign))) +
geom_smooth (data=datK, method="glm", formula = y~x+I(x^2) + I(x^3),  alpha=0.55, size = 1,level=0.95, aes(milestone, predict_value, color=interaction(model,foreign), fill=interaction(model,foreign))) +
geom_point(data=pointestf,  aes(time, logith+0.5,shape=as.factor(foreign)))+
scale_x_continuous(breaks = seq(2,10,by=1),
labels = labs) +
scale_color_manual(name = "Model Fitted",labels = labs_legend, values = color_legend) +
scale_fill_manual(name = "Model Fitted",labels = labs_legend, values = color_legend) +
scale_shape_discrete(name="Mean Value of Observed",labels = c("US","Foreign"))+
xlab("Milestone") + ylab("Log Hazard of Dropout")
ggsave("foreign_combined_global_regional_dot_logit.png",device = 'png',width=8,height=5)
labs <- c("p1", "p2", "p3", "p4","p5","p6","p7","p8 (optional)","Final")
labs_legend = c("Global - US", "Global - Foreign", "Regional - US", "Regional - Foreign")
color_legend = c("coral","hotpink2","steelblue1","slateblue3")
ggplot()+
geom_smooth (data= datL, method="glm", formula = y~x,  alpha=0.55, size = 1,level=0.88, aes(milestone, predict_probability, color=interaction(model,foreign), fill=interaction(model,foreign))) +
geom_smooth (data=datK, method="glm", formula = y~x+I(x^2) + I(x^3),  alpha=0.55, size = 1,level=0.95, aes(milestone, predict_probability, color=interaction(model,foreign), fill=interaction(model,foreign))) +
geom_point(data=pointestf,  aes(time, exp(logith+0.54)/(1+exp(logith+0.54)),shape=as.factor(foreign)))+
scale_x_continuous(breaks = seq(2,10,by=1),
labels = labs) +
scale_color_manual(name = "Model Fitted",labels = labs_legend, values = color_legend) +
scale_fill_manual(name = "Model Fitted",labels = labs_legend, values = color_legend) +
scale_shape_discrete(name="Mean Value of Observed",labels = c("US","Foreign"))+
xlab("Milestone") + ylab("Log Hazard of Dropout")
ggsave("foreign_combined_global_regional_dot_probability.png",device = 'png',width=8,height=5)
save(datK, file = 'male_quadratic_plotdata.RData')
save(pointestm, file='male_logith_dotplotdata.RData')
save(pointestf, file='foreign_logith_dotplotdata.RData')
save(datL, file = 'male_linear_plotdata.RData')
datC <- datK
save(datC, datL, pointestm,pointestf, file = 'male_foreign_cubic_linear_point_data.RData')
# use smooth to add a nonparametric curve.
#png("male_cubic_curve_dot.png")
labs <- c("p1", "p2", "p3", "p4","p5","p6","p7","p8 (optional)","Final")
ggplot(datK, aes(milestone,predict_value, color = as.factor(male))) +
stat_smooth( method="glm", formula = y~x+I(x^2) + I(x^3),  alpha=0.5, size = 1,level=0.95, aes(fill=male)) +
geom_point(data=pointestm,  aes(time, logith+0.54, color=as.factor(male))) +
xlab("Milestone") + ylab("Log Odd of Dropout") +
scale_x_continuous(breaks = seq(2,10,by=1),
labels = labs) +
scale_color_manual(labels = c("Female", "Male"), values = c("coral","steelblue1")) +
scale_fill_discrete(guide="none")+
guides(color=guide_legend(override.aes=list(fill=c("coral","steelblue1"))))
ggsave("cubic_dot.png", width = 8, height = 5, device = 'png')
labs <- c("p1", "p2", "p3", "p4","p5","p6","p7","p8 (optional)","Final")
ggplot()+
geom_smooth (data= datL, method="glm", formula = y~x,  alpha=0.65, size = 1,level=0.95, aes(milestone, predict_probability, color=interaction(model,male), fill=interaction(model,male))) +
geom_smooth (data=datK, method="glm", formula = y~x+I(x^2) + I(x^3),  alpha=0.65, size = 1,level=0.95, aes(milestone, predict_probability, color=interaction(model,male), fill=interaction(model,male))) +
geom_point(data=pointestm,  aes(time, exp(logith+0.5)/(1+exp(logith+0.5)),shape=as.factor(male)))+
scale_x_continuous(breaks = seq(2,10,by=1),
labels = labs) +
scale_color_manual(name = "Model Fitted",labels = c("Global - Female", "Global - Male", "Regional - Female", "Regional - Male"), values = c("coral","hotpink2","steelblue1","slateblue3")) +
scale_fill_manual(name = "Model Fitted",labels = c("Global - Female", "Global - Male", "Regional - Female", "Regional - Male"), values = c("coral","hotpink2","steelblue1","slateblue3")) +
scale_shape_discrete(name="Mean Value of Observed",labels = c("female","male"))+
xlab("Milestone") + ylab("Probability of Dropout")
ggsave("male_combined_global_regional_dot_prob.png",device = 'png',width=8,height=5)
labs <- c("p1", "p2", "p3", "p4","p5","p6","p7","p8 (optional)","Final")
ggplot()+
geom_smooth (data= datL, method="glm", formula = y~x,  alpha=0.65, size = 1,level=0.95, aes(milestone, predict_value*0.9, color=interaction(model,male), fill=interaction(model,male))) +
geom_smooth (data=datK, method="glm", formula = y~x+I(x^2) + I(x^3),  alpha=0.65, size = 1,level=0.95, aes(milestone, predict_value, color=interaction(model,male), fill=interaction(model,male))) +
geom_point(data=pointestm,  aes(time, logith+0.54,shape=as.factor(male)))+
scale_x_continuous(breaks = seq(2,10,by=1),
labels = labs) +
scale_color_manual(name = "Model Fitted",labels = c("Global - Female", "Global - Male", "Regional - Female", "Regional - Male"), values = c("coral","hotpink2","steelblue1","slateblue3")) +
scale_fill_manual(name = "Model Fitted",labels = c("Global - Female", "Global - Male", "Regional - Female", "Regional - Male"), values = c("coral","hotpink2","steelblue1","slateblue3")) +
scale_shape_discrete(name="Mean Value of Observed",labels = c("female","male"))+
xlab("Milestone") + ylab("Log Hazard of Dropout")
ggsave("male_combined_global_regional_dot_logit.png",device = 'png',width=8,height=5)
table(dat7$milestone)
table(dat7$milestone2)
table(dat9$milestone2)
table(dat9$milestone)
table(dat9$milestone3)
# if using mac:
setwd("~/Dropbox/MOOK")
# if using win:
#setwd("C:/Users/Chen/Dropbox/MOOK")
#load data
dat <- read.csv("CS50_ChosenUsers_1_irt.csv",header=TRUE, sep=",")
#those folllow the sequence are regular students, and those do not follow the seqence are irregular students
#please note this does not count p9, the final.
dat$regular<-NA
dat$regular[which(dat$p8 + dat$p7 + dat$p6+dat$p5+ dat$p4+ dat$p3+ dat$p2+ dat$p1==0 & dat$p0==1 )] <- 1
dat$regular[which(dat$p8 + dat$p7 + dat$p6+dat$p5+ dat$p4+ dat$p3+ dat$p2==0 & dat$p1==1 & dat$p0==1 )] <- 2
dat$regular[which(dat$p8 + dat$p7 + dat$p6+dat$p5+ dat$p4+ dat$p3==0 & dat$p2+ dat$p1==2 & dat$p0==1 )] <- 3
dat$regular[which(dat$p8 + dat$p7 + dat$p6+dat$p5+ dat$p4==0 & dat$p3+ dat$p2+ dat$p1==3 & dat$p0==1 )] <- 4
dat$regular[which(dat$p8 + dat$p7 + dat$p6+dat$p5==0 & dat$p4+ dat$p3+ dat$p2+ dat$p1==4 & dat$p0==1 )] <- 5
dat$regular[which(dat$p8 + dat$p7 + dat$p6==0 & dat$p5+ dat$p4+ dat$p3+ dat$p2+ dat$p1==5 & dat$p0==1 )] <- 6
dat$regular[which(dat$p8 + dat$p7 ==0 & dat$p6+dat$p5+ dat$p4+ dat$p3+ dat$p2+ dat$p1==6 & dat$p0==1 )] <- 7
dat$regular[which(dat$p8 == 0 & dat$p7 + dat$p6+dat$p5+ dat$p4+ dat$p3+ dat$p2+ dat$p1==7 & dat$p0==1 )] <- 8
dat$regular[which(dat$p8 + dat$p7 + dat$p6+dat$p5+ dat$p4+ dat$p3+ dat$p2+ dat$p1==8 & dat$p0==1 )] <- 9
dat$regularf<-NA
#dat$regularf[which(dat$p9 + dat$p8 + dat$p7 + dat$p6+dat$p5+ dat$p4+ dat$p3+ dat$p2+ dat$p1> 0 & dat$p0 ==1 )] <- 0
dat$regularf[which(dat$p9 + dat$p8 + dat$p7 + dat$p6+dat$p5+ dat$p4+ dat$p3+ dat$p2+ dat$p1==0 & dat$p0==1 )] <- 1
dat$regularf[which(dat$p9 + dat$p8 + dat$p7 + dat$p6+dat$p5+ dat$p4+ dat$p3+ dat$p2==0 & dat$p1==1 & dat$p0==1 )] <- 2
dat$regularf[which(dat$p9 + dat$p8 + dat$p7 + dat$p6+dat$p5+ dat$p4+ dat$p3==0 & dat$p2+ dat$p1==2 & dat$p0==1 )] <- 3
dat$regularf[which(dat$p9 + dat$p8 + dat$p7 + dat$p6+dat$p5+ dat$p4==0 & dat$p3+ dat$p2+ dat$p1==3 & dat$p0==1 )] <- 4
dat$regularf[which(dat$p9 + dat$p8 + dat$p7 + dat$p6+dat$p5==0 & dat$p4+ dat$p3+ dat$p2+ dat$p1==4 & dat$p0==1 )] <- 5
dat$regularf[which(dat$p9 + dat$p8 + dat$p7 + dat$p6==0 & dat$p5+ dat$p4+ dat$p3+ dat$p2+ dat$p1==5 & dat$p0==1 )] <- 6
dat$regularf[which(dat$p9 + dat$p8 + dat$p7 ==0 & dat$p6+dat$p5+ dat$p4+ dat$p3+ dat$p2+ dat$p1==6 & dat$p0==1 )] <- 7
dat$regularf[which(dat$p9 + dat$p8 == 0 & dat$p7 + dat$p6+dat$p5+ dat$p4+ dat$p3+ dat$p2+ dat$p1==7 & dat$p0==1 )] <- 8
dat$regularf[which(dat$p9 == 0 & dat$p8 + dat$p7 + dat$p6+dat$p5+ dat$p4+ dat$p3+ dat$p2+ dat$p1==8 & dat$p0==1 )] <- 9
dat$regularf[which(dat$p9 + dat$p8 + dat$p7 + dat$p6+dat$p5+ dat$p4+ dat$p3+ dat$p2+ dat$p1==9 & dat$p0==1 )] <- 10
dat$irregular <- NA
dat$irregular[which(is.na(dat$regularf) & dat$p0==1)] <- 1
dat$irregular[which(dat$regularf > 0 & dat$p0==1)] <- 0
#processing some other variables
#set reference date to 2014 May, created binary enroll phase.
#add number of computer language, number of none-zero, highest profeciency in any language
dat$age = 2015- as.numeric(as.character(dat$profile_year_of_birth))
dat$age[which(dat$age<10)] <- NA
dat$age[which(dat$age>80)] <- NA
dat$age[which(dat$age>69)] <- NA
#dat$c0 <- as.numeric(as.character(dat$c0))
dat$c1 <- as.numeric(as.character(dat$c1))
dat$c2 <- as.numeric(as.character(dat$c2))
dat$c3 <- as.numeric(as.character(dat$c3))
dat$c4 <- as.numeric(as.character(dat$c4))
dat$c5 <- as.numeric(as.character(dat$c5))
dat$c6 <- as.numeric(as.character(dat$c6))
dat$c7 <- as.numeric(as.character(dat$c7))
dat$c8 <- as.numeric(as.character(dat$c8))
dat$c9 <- as.numeric(as.character(dat$c9))
dat$c10 <- as.numeric(as.character(dat$c10))
dat$edu <- 7-as.numeric(as.character(dat$profile_level_of_education))
dat$enrollday<- as.Date(dat$enrollment_created, "%Y-%m-%d %H:%M")
dat$refday<- as.Date(dat$couse_all_upload, "%Y-%m-%d %H:%M")
dat$enrolltime <- as.numeric(dat$enrollday - dat$refday)
dat$numlang <- as.numeric(as.character(dat$num_lang))
dat$edu[which(dat$edu<1)] <- NA
dat$father_ed[which(dat$father_ed>6)]<-NA
dat$father_edu <- 6-dat$father_ed
dat$mother_ed[which(dat$mother_ed>6)]<-NA
dat$mother_edu <- 6-dat$mother_ed
dat$engfluent <- dat$fluent_1 + dat$fluent_2 + dat$fluent_3 + dat$fluent_4
dat$nointendcomplete <- dat$complete_1 + dat$complete_2 + dat$complete_3
dat$sat_math[which(dat$sat_math<300)] <- NA
dat$sat_verb[which(dat$sat_verb<200)] <-NA
dat$prog_year <- as.numeric(as.character(dat$prog_years))
dat$exp <- NA
dat$exp[which(dat$experience==1)] <- 1
dat$exp[which(dat$experience==0)] <- 0
dat$reason_lc <- as.factor(dat$reason_lc)
dat$reason_lc[which(dat$reason_lc==3)] <- NA
dat$reason <- as.numeric(dat$reason_lc)
dat$foreign[which(is.na(dat$COUNTRY))] <- NA
dat$npset <- NA
dat$npset <-  dat$p8 + dat$p7 + dat$p6+dat$p5+ dat$p4+ dat$p3+ dat$p2+ dat$p1
dat$reason_lc[which(dat$reason_lc==0)] <-1
dat$extrovert <- as.numeric(as.character(dat$introvert))
dat$extrovert[which(dat$extrovert == 4)] <-3
dat$extrovert[which(dat$extrovert == 5)] <- 4
dat$colab_pref<- as.numeric(dat$colab_pref)
dat$progroup <- NA
dat$progroup[which(dat$colab_pref==4)] <-2
dat$progroup[which(dat$colab_pref==6)] <- 0
dat$progroup[which(dat$colab_pref==3 | dat$colab_pref==5)] <- 1
#dat$cert <- 4- dat$cert
dat$nohelp <- dat$ppl_help_11
dat$gamehour5 <- as.numeric(as.character(dat$games))
dat$maxproglang <- apply(dat[187:223], 1, function(x) max(x, na.rm=TRUE))
dat$maxproglang[which(dat$maxproglang<0)] <- 0
dat$totalproglang <- apply(dat[301:332], 1, function(x) sum(x, na.rm=TRUE))
dat$totalproglang[which(dat$totalproglang>21)] <- 21
dat$forums <- 3-dat$forums
dat$exp_complete_video <- dat$complete_1
dat$exp_complete_assign <- dat$complete_2
dat$exp_complete_final <- dat$complete_3
#need to remove NAs when calculating the max
#only interested in row that have pretest information (p0==1)
dat2 = dat[dat$p0==1,]
#total number of milestones completed, regardless of order.
dat2$m1 <- 0
dat2$m2 <- NA
dat2$m3 <- NA
dat2$m4 <- NA
dat2$m5 <- NA
dat2$m6 <- NA
dat2$m7 <- NA
dat2$m8 <- NA
dat2$m9 <- NA
dat2$m10 <- NA
dat2$m1[which(dat2$p8 + dat2$p7 + dat2$p6+dat2$p5+ dat2$p4+ dat2$p3+ dat2$p2+ dat2$p1 + dat2$p9 + dat2$p0>0 )] <- 1
dat2$m2[which(dat2$p8 + dat2$p7 + dat2$p6+dat2$p5+ dat2$p4+ dat2$p3+ dat2$p2+ dat2$p1 + dat2$p9+ dat2$p0>1 )] <- 1
dat2$m3[which(dat2$p8 + dat2$p7 + dat2$p6+dat2$p5+ dat2$p4+ dat2$p3+ dat2$p2+ dat2$p1 + dat2$p9+ dat2$p0>2 )] <- 1
dat2$m4[which(dat2$p8 + dat2$p7 + dat2$p6+dat2$p5+ dat2$p4+ dat2$p3+ dat2$p2+ dat2$p1 + dat2$p9+ dat2$p0>3 )] <- 1
dat2$m5[which(dat2$p8 + dat2$p7 + dat2$p6+dat2$p5+ dat2$p4+ dat2$p3+ dat2$p2+ dat2$p1 + dat2$p9+ dat2$p0>4 )] <- 1
dat2$m6[which(dat2$p8 + dat2$p7 + dat2$p6+dat2$p5+ dat2$p4+ dat2$p3+ dat2$p2+ dat2$p1 + dat2$p9+ dat2$p0>5 )] <- 1
dat2$m7[which(dat2$p8 + dat2$p7 + dat2$p6+dat2$p5+ dat2$p4+ dat2$p3+ dat2$p2+ dat2$p1 + dat2$p9+ dat2$p0>6 )] <- 1
dat2$m8[which(dat2$p8 + dat2$p7 + dat2$p6+dat2$p5+ dat2$p4+ dat2$p3+ dat2$p2+ dat2$p1 + dat2$p9+ dat2$p0>7 )] <- 1
dat2$m9[which(dat2$p8 + dat2$p7 + dat2$p6+dat2$p5+ dat2$p4+ dat2$p3+ dat2$p2+ dat2$p1 + dat2$p9+ dat2$p0>8 )] <- 1
dat2$m10[which(dat2$p8 + dat2$p7 + dat2$p6+dat2$p5+ dat2$p4+ dat2$p3+ dat2$p2+ dat2$p1 + dat2$p9+ dat2$p0>9 )] <- 1
dat2$ms <- rowSums(cbind(dat2$m1 ,dat2$m2 ,dat2$m3 ,dat2$m4,dat2$m5,dat2$m6,dat2$m7,dat2$m8,dat2$m9,dat2$m10), na.rm=TRUE)
table(dat2$ms)
dat2$m1[which(dat2$ms==0)] <- 0
dat2$m2[which(dat2$ms==1)] <- 0
dat2$m3[which(dat2$ms==2)] <- 0
dat2$m4[which(dat2$ms==3)] <- 0
dat2$m5[which(dat2$ms==4)] <- 0
dat2$m6[which(dat2$ms==5)] <- 0
dat2$m7[which(dat2$ms==6)] <- 0
dat2$m8[which(dat2$ms==7)] <- 0
dat2$m9[which(dat2$ms==8)] <- 0
dat2$m10[which(dat2$ms==9)] <- 0
table(dat2$m10)
table(dat2$m1)
dat2$m1[which(dat2$ms==0)] <- 0
dat2$m2[which(dat2$ms==1)] <- 0
dat2$m3[which(dat2$ms==2)] <- 0
dat2$m4[which(dat2$ms==3)] <- 0
dat2$m5[which(dat2$ms==4)] <- 0
dat2$m6[which(dat2$ms==5)] <- 0
dat2$m7[which(dat2$ms==6)] <- 0
dat2$m8[which(dat2$ms==7)] <- 0
dat2$m9[which(dat2$ms==8)] <- 0
dat2$m10[which(dat2$ms==9)] <- 0
table(dat2$m10)
table(dat2$m1)
dat2$d1 <- 1-dat2$m1
dat2$d2 <- 1-dat2$m2
dat2$d3 <- 1-dat2$m3
dat2$d4 <- 1-dat2$m4
dat2$d5 <- 1-dat2$m5
dat2$d6 <- 1-dat2$m6
dat2$d7 <- 1-dat2$m7
dat2$d8 <- 1-dat2$m8
dat2$d9 <- 1-dat2$m9
dat2$d10 <- 1-dat2$m10
dat2$event <- 1
dat2$event[which(dat2$ms==10)] <- 0
dat2$censor = 1-dat2$event
table(dat2$event)
table(dat2$censor)
library(MASS)
dat2$age <- scale(dat2$age,center = TRUE, scale = TRUE)
dat2$cert <- scale(dat2$cert,center = TRUE, scale = TRUE)
dat2$oc_reg <- scale(dat2$oc_reg,center = TRUE, scale = TRUE)
dat2$oc_comp <- scale(dat2$oc_comp,center = TRUE, scale = TRUE)
dat2$fam <- scale(dat2$fam,center = TRUE, scale = TRUE)
dat2$nointendcomplete <- scale(dat2$nointendcomplete,center = TRUE, scale = TRUE)
dat2$engfluent <- scale(dat2$engfluent,center = TRUE, scale = TRUE)
dat2$numlang <- scale(dat2$numlang,center = TRUE, scale = TRUE)
dat2$testtot <- scale(dat2$testtot,center = TRUE, scale = TRUE)
dat2$enrolltime <- scale(dat2$enrolltime,center = TRUE, scale = TRUE)
#dat2$exp <- scale(dat2$exp,center = TRUE, scale = TRUE)
dat2$extrovert <- scale(dat2$extrovert,center = TRUE, scale = TRUE)
dat2$gamehour5 <- scale(dat2$gamehour5,center = TRUE, scale = TRUE)
dat2$maxproglang <- scale(dat2$maxproglang,center = TRUE, scale = TRUE)
dat2$totalproglang <- scale(dat2$totalproglang,center = TRUE, scale = TRUE)
dat2$prog_year <- scale(dat2$prog_year,center = TRUE, scale = TRUE)
dat2$reason <- scale(dat2$reason,center = TRUE, scale = TRUE)
dat2$forums <- scale(dat2$forums,center = TRUE, scale = TRUE)
dat2$exp_complete_assign <- scale(dat2$exp_complete_assign,center = TRUE, scale = TRUE)
dat2$exp_complete_video <- scale(dat2$exp_complete_video,center = TRUE, scale = TRUE)
dat2$exp_complete_final <- scale(dat2$exp_complete_final,center = TRUE, scale = TRUE)
dat2$age <- as.numeric(dat2$age)
dat2$cert <- as.numeric(dat2$cert)
dat2$oc_reg <- as.numeric(dat2$oc_reg)
dat2$oc_comp <- as.numeric(dat2$oc_comp)
dat2$fam <- as.numeric(dat2$fam)
dat2$nointendcomplete <- as.numeric(dat2$nointendcomplete)
dat2$engfluent <- as.numeric(dat2$engfluent)
dat2$numlang <- as.numeric(dat2$numlang)
dat2$testtot <- as.numeric(dat2$testtot)
dat2$enrolltime <- as.numeric(dat2$enrolltime)
#dat2$exp <- as.numeric(dat2$exp)
dat2$extrovert <- as.numeric(dat2$extrovert)
dat2$gamehour5 <- as.numeric(dat2$gamehour5)
dat2$maxproglang <- as.numeric(dat2$maxproglang)
dat2$totalproglang <- as.numeric(dat2$totalproglang)
dat2$prog_year <- as.numeric(dat2$prog_year)
dat2$reason <- as.numeric(dat2$reason)
dat2$forums <- as.numeric(dat2$forums)
dat2$exp_complete_assign <- as.numeric(dat2$exp_complete_assign)
dat2$exp_complete_video <- as.numeric(dat2$exp_complete_video)
dat2$exp_complete_final <- as.numeric(dat2$exp_complete_final)
dat2$prog_year <- as.numeric(dat2$prog_year)
dat2$forumexp <- scale(dat2$forum_exp,center = TRUE, scale = TRUE)
dat2$forumexp <- as.numeric(dat2$forum_exp)
library(psych)
library(GPArotation)
factorvar <- with(dat2, data.frame(cert,reason, oc_reg , oc_comp , fam , engfluent, numlang , school ,testtot ,foreign, prog_year, extrovert,  nohelp, gamehour5,maxproglang,totalproglang, forums, exp_complete_final,exp_complete_video, exp_complete_assign, testtot))
corMat <- cor(factorvar, use = "pairwise.complete.obs")
solution<-fa(r=corMat, nfactors = 4,rotate = "oblimin",fm="pa")
solution
dat2$motiv <- (dat2$cert+ dat2$exp_complete_assign+dat2$exp_complete_final+dat2$exp_complete_video+dat2$forums)/5
dat2$numcourse <- (dat2$oc_comp+dat2$oc_reg)/2
dat2$csexperience <- (dat2$prog_year+dat2$fam+dat2$maxproglang+dat2$totalproglang)/4
dat2$motiv <- scale(dat2$motiv,center = TRUE, scale = TRUE)
dat2$csexperience <- scale(dat2$csexperience, center = TRUE, scale = TRUE)
dat2$numcourse <- scale(dat2$numcourse,center = TRUE, scale = TRUE)
dat3<-dat2[dat2$irregular==0,]
table(dat3$censor)
table(dat3$d10)
library(rms)
library(KMsurv)
library(nlme)
library(survminer)
library(survMisc)
library(multcomp)
library(reshape2)
dat4 <- reshape(dat3, dir="long",varying = list(375:384,435:444), timevar = "milestone",v.names = c('click','drop'),idvar="user_id")
dat5 <- dat4[order(dat4$user_id),]
dat5[1:20,428:433]
dat6 <- dat5[complete.cases(dat5$drop),]
dat6[1:20,428:433]
dat7 <- dat6[, c("user_id","ms","censor","age", "edu", "male", "enrollment_mode", "reason", "cert","oc_reg" , "oc_comp" , "fam" , "engfluent" , "nointendcomplete" , "school" ,  "numlang" , "testtot" ,"enrolltime" ,"foreign", "extrovert", "nohelp", "gamehour5","maxproglang","totalproglang","prog_year","motiv","csexperience","numcourse","milestone","click","drop","event")]
table(dat7$milestone)
xafit1<-glm(drop~foreign, family="binomial", data=dat7)
summary(xafit1)
t<-data.frame(xafit1$coefficients)
p0<-t[1,1]
p1<-p0+t[2,1]
ts0 <- survfit( Surv(ms, event)~ 1, conf.type="log", subset=(foreign==0), data=dat7)
ts0
ts1 <- survfit( Surv(ms, event)~ 1, conf.type="log", subset=(foreign==1), data=dat7)
ts1
h0<-ts0$n.event/ts0$n.risk
h1<-ts1$n.event/ts1$n.risk
odds0<-h0/(1-h0)
odds1<-h1/(1-h1)
logith0<-log(odds0)
logith1<-log(odds1)
pointestf0 <- data.frame(ts1$time[1:9]+1, logith0[1:9])
pointestf1 <- data.frame(ts1$time[1:9]+1, logith1[1:9])
colnames(pointestf0) <- c("time","logith")
colnames(pointestf1) <- c("time","logith")
pointestf <- rbind(pointestf0, pointestf1)
pointestf$foreign <- c(rep(0,9),rep(1,9))
ts0f <- survfit( Surv(ms, event)~ 1, conf.type="log", subset=(foreign==0), data=datK)
ts0f
ts1f <- survfit( Surv(ms, event)~ 1, conf.type="log", subset=(foreign==1), data=datK)
ts1f
h0f<-ts0f$n.event/ts0f$n.risk
h1f<-ts1f$n.event/ts1f$n.risk
odds0f<-h0f/(1-h0f)
odds1f<-h1f/(1-h1f)
logith0f<-log(odds0f)
logith1f<-log(odds1f)
pointestf0f <- data.frame(ts1f$time[1:9]+1, logith0f[1:9])
pointestf1f <- data.frame(ts1f$time[1:9]+1, logith1f[1:9])
colnames(pointestf0f) <- c("time","logith")
colnames(pointestf1f) <- c("time","logith")
pointestff <- rbind(pointestf0f, pointestf1f)
pointestff$foreign <- c(rep(0,9),rep(1,9))
#logith0<-odds0
#logith1<-odds1
dat7$ms2 <- dat7$ms^2
xafit8<-glm(event~foreign + ms +ms2, family="binomial", data=dat7)
summary(xafit8)
t<-data.frame(xafit8$coefficients)
y0<-t[1,1] + t[3,1]*ts0$time[1:8] + t[4,1]*ts0$time[1:8]^2
y1<-t[1,1] + t[2,1] + t[3,1]*ts0$time[1:8] + t[4,1]*ts0$time[1:8]^2
plot(ts0$time[1:8], logith0[1:8], type="p", ylab="Estimated Logit Hazard", xlab="milestone",
ylim=c(-2, 1), xlim=c(1, 9), col="blue")
par(new=T)
plot(ts1$time[1:8], logith1[1:8], type="p", ylab=" ", ylim=c(-2, 1), xlim=c(1, 9), xlab="", col="red")
par(new=T)
plot(ts1$time[1:8], y0, type="l", ylab=" ", ylim=c(-2, 1), xlim=c(1, 9), xlab="", col="blue")
par(new=T)
plot(ts1$time[1:8], y1, type="l", ylab=" ", ylim=c(-2, 1), xlim=c(1, 9), xlab="", col="red")
legend(6,1, # places a legend at the appropriate place
c('Location=US','Location=Foreign'), # puts text in the legend
lty=c(1,1), # gives the legend appropriate symbols (lines)
lwd=c(2.5,2.5),col=c('blue','red')) # gives the legend lines the correct color and width
logith0
dat7$milestone2 <- dat7$milestone^2
dat7$milestone3 <- dat7$milestone^3
dat9 <- dat7
dat9$milestones = dat9$milestone-1
dat9<- dat9[dat9$milestones>0,]
dat9$milestone2 <- dat9$milestone^2
dat9$milestone3 <- dat9$milestone^3
dat9$mss <- dat9$ms+1
dat7$milestone2 <- dat7$milestone^2
dat7$milestone3 <- dat7$milestone^3
dat9 <- dat7
dat9$milestones = dat9$milestone-1
dat9<- dat9[dat9$milestones>0,]
dat9$milestone2 <- dat9$milestone^2
dat9$milestone3 <- dat9$milestone^3
dat9$mss <- dat9$ms+1
save(dat7, file = "CS50_MOOC_Survival_Analysis_Data_0.RData")
save(dat9, file = "CS50_MOOC_Survival_Analysis_Data_1.RData")
timevaryingmodel <- glm(drop ~ milestone + milestone2 + milestone3+ male +milestone*male +  age +  testtot  +foreign + gamehour5 + testtot*milestone  , family="binomial", data=dat7)
summary(timevaryingmodel)
timevaryingmodel <- glm(drop ~ milestone + milestone2 + milestone3+ male +milestone*male +  age +  testtot  +foreign + gamehour5 + testtot*milestone  , family="binomial", data=dat9)
summary(timevaryingmodel)
timevaryingmodel <- glm(drop ~ milestone + milestone2 + milestone3+ male +milestone*male +  age +  testtot  +foreign + gamehour5 + testtot*milestone +foreign*milestone , family="binomial", data=dat9)
summary(timevaryingmodel)
timevaryingmodel <- glm(drop ~ milestone + milestone2 + milestone3+ male +milestone*male +  age +  testtot  +foreign + gamehour5 + testtot*milestone +foreign*milestone , family="binomial", data=dat7)
summary(timevaryingmodel)
timevaryingmodel <- glm(drop ~ milestone + milestone2 + milestone3+ male +milestone*male +  age +  testtot  +foreign + gamehour5 + testtot*milestone  , family="binomial", data=dat7)
summary(timevaryingmodel)
model.for.plot <- glm(drop ~ milestone + milestone2 + milestone3+ male +milestone*male +  age +  testtot  +foreign + gamehour5 + testtot*milestone  , family="binomial", data=dat7)
summary(model.for.plot)
dat7$motivhigh <- NA
dat7$motivhigh[which(dat7$motiv < 0.35)] <- 0
dat7$motivhigh[which(dat7$motiv > 0.35)] <- 1
table(dat7$motivhigh)
dat7$testhigh <- NA
dat7$testhigh[which(dat7$testtot < -1.4 & dat7$testtot > -2)] <- 0
dat7$testhigh[which(dat7$testtot < 0 & dat7$testtot > -0.03)] <- 1
table(dat7$testhigh)
dat7$testabovemedian <- NA
dat7$testabovemedian[which(dat7$testtot < 0)] <- 0
dat7$testabovemedian[which(dat7$testtot > 0)] <- 1
table(dat7$testabovemedian)
dat7$milestone2 <- dat7$milestone^2
dat7$milestone3 <- dat7$milestone^3
dat9 <- dat7
dat9$milestones = dat9$milestone-1
dat9<- dat9[dat9$milestones>0,]
dat9$milestone2 <- dat9$milestone^2
dat9$milestone3 <- dat9$milestone^3
dat9$mss <- dat9$ms+1
save(dat7, file = "CS50_MOOC_Survival_Analysis_Data_0.RData")
save(dat9, file = "CS50_MOOC_Survival_Analysis_Data_1.RData")
